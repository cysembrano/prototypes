@using Convergys.Assist.WebUI.Models
@using Convergys.Assist.Repository.Enums

@model Convergys.Assist.WebUI.Models.CallbackShowModel
@{
    ViewBag.Title = "Show";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
}
@section scriptscustom
{
    <script src="~/Scripts/Custom/CallbackShow.js"></script>
}
@using (Html.BeginForm("Submit", "Callback", FormMethod.Post, new { role = "form", id = "callbackForm" }))
{
    <div class="row">
        <div class="col-lg-7">
            <h1>@Resources.Content.Callback_Show_Header1&nbsp;<small>@Resources.Content.Callback_Show_Header1Small</small></h1>
        </div>
        <div class="col-lg-5">
            <div id="errorContainer"></div>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-sm-4">
            <div class="btn-group btn-group-justified">
                @if (Model.ActionType != EActionType.View)
                {
                    <a href="#" class="btn btn-primary btn-default btn-xs" onclick="$(this).closest('form').submit(); return false;">Save</a>
                    <a href="#" class="btn btn-primary btn-info btn-xs clear">Clear</a>
                }
                else
                {
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Callback.Id }, new { @class = "btn btn-primary btn-default btn-xs" })
                    @Html.ActionLink("New", "Create", null, new { @class = "btn btn-primary btn-info btn-xs" })
                }
            </div>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-lg-7">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_AssignToTeam</label>
                <div class="input-group date">
                    @Html.HiddenFor(t => t.Callback.AssignedToTeamId, new { id = "hdnTeamIdSelected" })
                    @Html.HiddenFor(t => t.Callback.AssignedToTeamName, new { id = "hdnTeamNameSelected" })
                    @if (Model.IsTeamDropDownAvailable && Model.ActionType != EActionType.View)
                    { 
                        @Html.DropDownList("ddTeamList", new SelectList(Model.TeamList, "TeamId", "TeamName", Model.Callback.AssignedToTeamId), new { id = "ddTeamList", @class = "form-control" })
                        <span class="input-group-addon">
                            <span class="fa fa-users"></span>
                        </span>
                    }
                    else
                    {
                        <p class="form-control-static">@Model.Callback.AssignedToTeamName</p>  
                    }

                </div>
            </div>
        </div>
        <div class="col-lg-5">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_AssignToAgent</label>
                <div class="input-group date">
                    @Html.HiddenFor(t => t.Callback.AssignedToEmpId, new { id = "hdnEmpIdSelected" })
                    @Html.HiddenFor(t => t.Callback.AssignedToEmpName, new { id = "hdnEmpNameSelected" })
                    @if (Model.IsAgentDropDownAvailable && Model.ActionType != EActionType.View)
                    {
                        <select class="form-control" id="ddCallbackShowAgent">
                        </select>
                        <span class="input-group-addon">
                            <span class="fa fa-user"></span>
                        </span>
                    }
                    else
                    {
                        <p class="form-control-static">@Model.Callback.AssignedToEmpName</p>  
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_CustName</label>
                @if (Model.ActionType == EActionType.View)
                { <p class="form-control-static">@Model.Callback.CustomerName</p> }
                else
                { @Html.TextBoxFor(model => model.Callback.CustomerName, new { type = "text", @class = "form-control" }) }
            </div>
        </div>

        <div class="col-sm-4">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_Contact1</label>
                @if (Model.ActionType == EActionType.View)
                { <p class="form-control-static">@Model.Callback.Contact1Phone</p> }
                else
                { @Html.TextBoxFor(model => model.Callback.Contact1Phone, new { @class = "form-control", placeholder = Resources.Content.Callback_Show_Contact1P }) }

            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_Contact2</label>
                @if (Model.ActionType == EActionType.View)
                { <p class="form-control-static">@Model.Callback.Contact2Phone</p> }
                else
                { @Html.TextBoxFor(model => model.Callback.Contact2Phone, new { @class = "form-control", placeholder = Resources.Content.Callback_Show_Contact2P }) }
            </div>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_CallRefNum</label>
                @if (Model.ActionType == EActionType.View)
                { <p class="form-control-static">@Model.Callback.CallRefNumber</p> }
                else
                {  @Html.TextBoxFor(model => model.Callback.CallRefNumber, new { @class = "form-control", placeholder = Resources.Content.Callback_Show_CallRefNumP }) }
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_Reason</label>
                @Html.HiddenFor(b => b.Callback.CallbackReasonId, new { id = "hdnReasonSelectedId" })
                @Html.HiddenFor(b => b.Callback.CallbackReasonText, new { id = "hdnReasonSelectedText" })
                @if (Model.ActionType == EActionType.View)
                { <p class="form-control-static">@Model.Callback.CallbackReasonText</p> }
                else
                {
                    <select class="form-control" id="selReasonList" name="selReasonList" onclick="javascript:reasonListChange();">
                    </select>
                }
            </div>
        </div>
        <div class="col-sm-2">
            <label>@Resources.Content.Callback_Search_FilterStatusLabel</label>
            <div class="form-group">
                @if (Model.ActionType == EActionType.View)
                {
                    <p class="form-control-static">@Model.Callback.CallbackStatus</p> 
                }
                else
                {
                    @Html.DropDownListFor(model => model.Callback.CallbackStatusId,
                                      new SelectList(Model.CallbackStatusOptions, "Key", "Value", Model.CallbackStatusOptions.First(t => t.Value == "Open").Key),
                                      new { id = "ddFilterStatus", @class = "form-control" })
                }
            </div>
        </div>
        @if (Model.ActionType != EActionType.View)
        {
            <div class="col-sm-2">
                <div class="form-group">

                    <label>@Resources.Content.Callback_Show_AssignToSchedEnforce</label>
                    <select class="form-control" id="ddCallbackShowSchedEnforce">
                        <option selected="selected" value="0">No</option>
                    </select>


                </div>
            </div>
        }
    </div>    
    <!-- /.row -->
    <div class="row">
        <div class="col-sm-12">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_Comments</label>
                @if (Model.ActionType == EActionType.View)
                { <p class="form-control-static">@Model.Callback.Comments</p> }
                else
                { @Html.TextBoxFor(model => model.Callback.Comments, new { type = "text", @class = "form-control" }) }
            </div>
        </div>
    </div>
    
                if (Model.ActionType != EActionType.View)
                {
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_CustTimeZone</label>
                @Html.DropDownListFor(model => model.CustSelectedTimezone, Model.CustTimeZoneCollection,
                                        new { id = "ddCustTimeZone", @class = "form-control" })
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_AgentTimeZone</label>
                @Html.DropDownListFor(model => model.AgentSelectedTimezone, Model.AgentTimeZoneCollection,
                                        new { id = "ddAgentTimeZone", @class = "form-control" })

            </div>
        </div>
    </div>
    <!-- ./row -->
                }
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_CustTimeStartComp</label>
                @if (Model.ActionType != EActionType.View)
                {
                    <div class='input-group date' id="dtpCustSched">
                        @Html.TextBoxFor(model => model.Callback.CustomerCallbackTimeStart, new { id = "dtpInputCustSched", @class = "form-control" })
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                }
                else
                {
                    <p class="form-control-static">@Model.Callback.CustomerCallbackTimeStart</p>
                }
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                <label>@Resources.Content.Callback_Show_AgentTimeStartComp</label>
                @if (Model.ActionType != EActionType.View)
                {
                    <div class="input-group date" id="dtpAgentSched">
                        @Html.TextBoxFor(model => model.Callback.AgentCallbackTimeStart, new { id = "dtpInputAgentSched", @class = "form-control" })
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                }
                else
                {
                    <p class="form-control-static">@Model.Callback.AgentCallbackTimeStart</p>
                }
            </div>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <div class="col-sm-4">
            <div class="btn-group btn-group-justified">
                @if (Model.ActionType != EActionType.View)
                {
                    <a href="#" class="btn btn-primary btn-default btn-xs" onclick="$(this).closest('form').submit(); return false;">Save</a>
                    <a href="#" class="btn btn-primary btn-info btn-xs clear">Clear</a>
                }
                else
                {
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Callback.Id }, new { @class = "btn btn-primary btn-default btn-xs" })
                    @Html.ActionLink("New", "Create", null, new { @class = "btn btn-primary btn-info btn-xs" })
                }
            </div>
        </div>
    </div>
    <!-- /.row -->
    @Html.HiddenFor(p => p.Callback.Id)
    @Html.HiddenFor(p => p.ActionTypeId)
}

